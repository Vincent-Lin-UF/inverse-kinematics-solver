import { c as create_ssr_component, d as add_attribute, e as escape } from "../../chunks/ssr.js";
const css = {
  code: ".grid.svelte-1yshvwf.svelte-1yshvwf{display:grid;grid-template-columns:repeat(2, minmax(0,1fr));gap:.75rem}.card.svelte-1yshvwf.svelte-1yshvwf{border:1px solid #e5e7eb;border-radius:.75rem;padding:1rem}.title.svelte-1yshvwf.svelte-1yshvwf{font-weight:700;font-size:1.1rem;margin-bottom:.5rem}.row.svelte-1yshvwf.svelte-1yshvwf{display:grid;grid-template-columns:1fr 1fr 1fr;gap:.5rem;margin-bottom:.5rem}input.svelte-1yshvwf.svelte-1yshvwf{width:100%;padding:.4rem;border:1px solid #d1d5db;border-radius:.5rem}button.svelte-1yshvwf.svelte-1yshvwf{padding:.6rem 1rem;border-radius:.6rem;border:1px solid #111827;background:#111827;color:#fff;cursor:pointer}button.svelte-1yshvwf.svelte-1yshvwf:hover{background:#0b0f1a}.outputs.svelte-1yshvwf span.svelte-1yshvwf{display:block;margin-bottom:.3rem}.error.svelte-1yshvwf.svelte-1yshvwf{color:#b91c1c;margin-top:.5rem}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  const API =\\n    (import.meta.env.DEV ? 'http://localhost:3000' : '') + '/api/close-loop';\\n\\n  let P_tool_6 = [25, 23, 24];\\n  let P_tool_f = [0.177, 0.884, -0.433];\\n  let S6_f     = [-0.153, 0.459, 0.875];\\n  let a67_f    = [-0.153, 0.459, 0.875];\\n\\n  let out = null;\\n  let loading = false;\\n  let err = \\"\\";\\n\\n  async function compute() {\\n    loading = true; err = \\"\\"; out = null;\\n    try {\\n      const res = await fetch(API, {\\n        method: \\"POST\\",\\n        headers: { \\"Content-Type\\": \\"application/json\\" },\\n        body: JSON.stringify({ P_tool_6, P_tool_f, S6_f, a67_f })\\n      });\\n      if (!res.ok) throw new Error(\`HTTP \${res.status}\`);\\n      out = await res.json();\\n    } catch (e) {\\n      err = (e && e.message) ? e.message : String(e);\\n    } finally {\\n      loading = false;\\n    }\\n  }\\n<\/script>\\n\\n<style>\\n  .grid { display: grid; grid-template-columns: repeat(2, minmax(0,1fr)); gap: .75rem; }\\n  .card { border: 1px solid #e5e7eb; border-radius: .75rem; padding: 1rem; }\\n  .title { font-weight: 700; font-size: 1.1rem; margin-bottom: .5rem; }\\n  .row { display: grid; grid-template-columns: 1fr 1fr 1fr; gap: .5rem; margin-bottom: .5rem; }\\n  input { width: 100%; padding: .4rem; border: 1px solid #d1d5db; border-radius: .5rem; }\\n  button { padding: .6rem 1rem; border-radius: .6rem; border: 1px solid #111827; background: #111827; color: #fff; cursor: pointer; }\\n  button:hover { background: #0b0f1a; }\\n  .outputs span { display: block; margin-bottom: .3rem; }\\n  .error { color: #b91c1c; margin-top: .5rem; }\\n</style>\\n\\n<h1>Inverse Kinematics : Close-the-Loop</h1>\\n<p>S₁ assumed to be world Z through the origin.</p>\\n\\n<div class=\\"grid\\">\\n  <div class=\\"card\\">\\n    <div class=\\"title\\">^6P<sub>tool</sub> (unused in minimal math)</div>\\n    <div class=\\"row\\">\\n      <input type=\\"number\\" step=\\"any\\" bind:value={P_tool_6[0]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={P_tool_6[1]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={P_tool_6[2]}>\\n    </div>\\n  </div>\\n\\n  <div class=\\"card\\">\\n    <div class=\\"title\\">^F P<sub>tool</sub></div>\\n    <div class=\\"row\\">\\n      <input type=\\"number\\" step=\\"any\\" bind:value={P_tool_f[0]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={P_tool_f[1]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={P_tool_f[2]}>\\n    </div>\\n  </div>\\n\\n  <div class=\\"card\\">\\n    <div class=\\"title\\">^F S6 (unused in minimal math)</div>\\n    <div class=\\"row\\">\\n      <input type=\\"number\\" step=\\"any\\" bind:value={S6_f[0]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={S6_f[1]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={S6_f[2]}>\\n    </div>\\n  </div>\\n\\n  <div class=\\"card\\">\\n    <div class=\\"title\\">^F a<sub>67</sub> (S7 direction)</div>\\n    <div class=\\"row\\">\\n      <input type=\\"number\\" step=\\"any\\" bind:value={a67_f[0]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={a67_f[1]}>\\n      <input type=\\"number\\" step=\\"any\\" bind:value={a67_f[2]}>\\n    </div>\\n  </div>\\n</div>\\n\\n<div style=\\"margin-top:1rem;\\">\\n  <button on:click={compute} disabled={loading}>{loading ? \\"Computing...\\" : \\"Compute\\"}</button>\\n  {#if err}<div class=\\"error\\">Error: {err}</div>{/if}\\n</div>\\n\\n{#if out}\\n  <div class=\\"card\\" style=\\"margin-top:1rem;\\">\\n    <div class=\\"title\\">Results</div>\\n    <div class=\\"outputs\\">\\n      <span>a<sub>71</sub> = {out.a71.toFixed(4)}</span>\\n      <span>S<sub>7</sub>  = {out.S7.toFixed(4)}</span>\\n      <span>S<sub>1</sub>  = {out.S1.toFixed(4)}</span>\\n      <span>α<sub>71</sub> = {out.al71_deg.toFixed(4)}°</span>\\n      <span>θ<sub>7</sub>  = {out.th7_deg.toFixed(4)}°</span>\\n      <span>γ<sub>1</sub>  = {out.gaml_deg.toFixed(4)}°</span>\\n    </div>\\n  </div>\\n{/if}\\n"],"names":[],"mappings":"AAgCE,mCAAM,CAAE,OAAO,CAAE,IAAI,CAAE,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,GAAG,CAAE,MAAQ,CACrF,mCAAM,CAAE,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,aAAa,CAAE,MAAM,CAAE,OAAO,CAAE,IAAM,CACzE,oCAAO,CAAE,WAAW,CAAE,GAAG,CAAE,SAAS,CAAE,MAAM,CAAE,aAAa,CAAE,KAAO,CACpE,kCAAK,CAAE,OAAO,CAAE,IAAI,CAAE,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,KAAK,CAAE,aAAa,CAAE,KAAO,CAC5F,mCAAM,CAAE,KAAK,CAAE,IAAI,CAAE,OAAO,CAAE,KAAK,CAAE,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,aAAa,CAAE,KAAO,CACtF,oCAAO,CAAE,OAAO,CAAE,KAAK,CAAC,IAAI,CAAE,aAAa,CAAE,KAAK,CAAE,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAE,UAAU,CAAE,OAAO,CAAE,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,OAAS,CAClI,oCAAM,MAAO,CAAE,UAAU,CAAE,OAAS,CACpC,uBAAQ,CAAC,mBAAK,CAAE,OAAO,CAAE,KAAK,CAAE,aAAa,CAAE,KAAO,CACtD,oCAAO,CAAE,KAAK,CAAE,OAAO,CAAE,UAAU,CAAE,KAAO"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let P_tool_6 = [25, 23, 24];
  let P_tool_f = [0.177, 0.884, -0.433];
  let S6_f = [-0.153, 0.459, 0.875];
  let a67_f = [-0.153, 0.459, 0.875];
  $$result.css.add(css);
  return `<h1 data-svelte-h="svelte-1pv4uqr">Inverse Kinematics : Close-the-Loop</h1> <p data-svelte-h="svelte-ies3gw">S₁ assumed to be world Z through the origin.</p> <div class="grid svelte-1yshvwf"><div class="card svelte-1yshvwf"><div class="title svelte-1yshvwf" data-svelte-h="svelte-sq0brz">^6P<sub>tool</sub> (unused in minimal math)</div> <div class="row svelte-1yshvwf"><input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", P_tool_6[0], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", P_tool_6[1], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", P_tool_6[2], 0)}></div></div> <div class="card svelte-1yshvwf"><div class="title svelte-1yshvwf" data-svelte-h="svelte-ze4f52">^F P<sub>tool</sub></div> <div class="row svelte-1yshvwf"><input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", P_tool_f[0], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", P_tool_f[1], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", P_tool_f[2], 0)}></div></div> <div class="card svelte-1yshvwf"><div class="title svelte-1yshvwf" data-svelte-h="svelte-bbrzef">^F S6 (unused in minimal math)</div> <div class="row svelte-1yshvwf"><input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", S6_f[0], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", S6_f[1], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", S6_f[2], 0)}></div></div> <div class="card svelte-1yshvwf"><div class="title svelte-1yshvwf" data-svelte-h="svelte-12th9hu">^F a<sub>67</sub> (S7 direction)</div> <div class="row svelte-1yshvwf"><input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", a67_f[0], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", a67_f[1], 0)}> <input type="number" step="any" class="svelte-1yshvwf"${add_attribute("value", a67_f[2], 0)}></div></div></div> <div style="margin-top:1rem;"><button ${""} class="svelte-1yshvwf">${escape("Compute")}</button> ${``}</div> ${``}`;
});
export {
  Page as default
};
